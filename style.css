*,*::after,*::before{
    box-sizing: border-box;
}

/* Declaring some variables */
:root{
    --cell-size: 100px;
    --mark-size: calc(var(--cell-size)* 0.9);
}

body{
    margin: 0;
}

.board{
    width: 100vw;
    height: 100vh;
    background: #F7EC7D;
    display: grid;
    justify-content: center;
    align-content: center;
    justify-items: center;
    align-items: center;
    grid-template-columns: repeat(3,auto);
}
.cell{
    position: relative;
    width: var(--cell-size);
    height: var(--cell-size);
    border: 1px solid black;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer; /*Cursor chaned to pointer inside the game*/
}

/* Cursor not allowed where X and O is already present */
.cell.x,
.cell.o{
    cursor: not-allowed;
}

/* Making the grid  */
.cell:first-child,
.cell:nth-child(2),
.cell:nth-child(3){
    border-top: 0;
}

.cell:nth-child(3n){
    border-right:0;
}
.cell:nth-child(3n+1){
    border-left: 0;
}

.cell:last-child,
.cell:nth-child(7),
.cell:nth-child(8){
    border-bottom:0 ;
}


/* Making X using CSS */

.cell.x::before,
.cell.x::after{
    position: absolute;
    content: '';
    width: calc(var(--mark-size)*0.15);
    height: var(--mark-size);
    background: #E3516E;
}
.cell.x::before{
    transform: rotate(45deg);
}
.cell.x::after{
    transform: rotate(-45deg);
}

/* Making O using CSS */

.cell.o::before{
    position: absolute;
    content: '';
    width: var(--mark-size);
    height: var(--mark-size);
    background: #51B5A9;
    border-radius: 50%;
}
.cell.o::after{
    position: absolute;
    content: '';
    width: calc(var(--mark-size)*0.7);
    height: calc(var(--mark-size)*0.7);
    background: #F7EC7D;
    border-radius: 50%;
}


/* Hover Effect Most important */
/* Hover effect will be applied on complete board to check whose turn it is */

.board.x .cell:not(.x):not(.o):hover::before,
.board.x .cell:not(.x):not(.o):hover::after{
    /* We will make the "X" just like the cell */
    position: absolute;
    content: '';
    width: calc(var(--mark-size)*0.15);
    height: var(--mark-size);
    background: #f6abba;
}

.board.x .cell:not(.x):not(.o):hover::before{
    transform: rotate(45deg);
}

.board.x .cell:not(.x):not(.o):hover::after{
    transform: rotate(-45deg);
}

/* Making circle for Hovering (same like cell but a little light) */
.board.o .cell:not(.x):not(.o):hover::before{
    position: absolute;
    content: '';
    width: var(--mark-size);
    height: var(--mark-size);
    background: #c5f2ee;
    border-radius: 50%;
}
.board.o .cell:not(.x):not(.o):hover::after{
    position: absolute;
    content: '';
    width: calc(var(--mark-size)*0.7);
    height: calc(var(--mark-size)*0.7);
    background: #F7EC7D;
    border-radius: 50%;
}

/* Winning Message Styling */

.winning-message{
    display: none;
    position: fixed;
    top:0;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: rgba(0, 0, 0, 0.9);
    justify-content: center;
    align-items: center;
    color: white;
    font-size: 5rem;
    flex-direction: column;
}

.winning-message button{
    font-size: 3rem;
    background-color: white;
    border:1px solid black;
    padding: .25em .5em;
    cursor: pointer;
}

.winning-message button:hover{
    background-color: black;
    border: 1px solid white;
    color: white;
}

.winning-message.show{
    display: flex;
}